imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: easy_admin/}
    - { resource: google.yml}
    - { resource: "@BackendBundle/Resources/config/services.yml" }
    - { resource: "@SistemaBundle/Resources/config/services.yml" }
    - { resource: "@FrontendBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es
    path.imagenesResources: /uploads/resources
    path.documentosResources: /uploads/documentos
    path.imagenesNoticias: /uploads/noticias
    path.imagenesVideos: /uploads/videos
    path.imagenesProgramas: /uploads/programas
    path.imagenesCapitulos: /uploads/capitulos
    path.imagenesHorarios: /uploads/horarios
    path.imagenesProgramas_radio: /uploads/radio/programas
    path.imagenesHorarios_radio: /uploads/radio/horarios
    path.audiosNoticias: /uploads/audios

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    translator: { fallbacks: [ "es" ] }
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

vich_uploader:
    db_driver: orm
    mappings:
        noticias_images:
            uri_prefix:        '%path.imagenesNoticias%'
            upload_destination: %kernel.root_dir%/../web/uploads/noticias
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        documentos_image:
            uri_prefix:       '%path.documentosResources%'
            upload_destination: %kernel.root_dir%/../web/uploads/documentos
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        resources_image:
            uri_prefix:       '%path.imagenesResources%'
            upload_destination: %kernel.root_dir%/../web/uploads/resources
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        capitulos_image:
            uri_prefix:       '%path.imagenesCapitulos%'
            upload_destination: %kernel.root_dir%/../web/uploads/capitulos
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        programas_image:
            uri_prefix:       '%path.imagenesProgramas%'
            upload_destination: %kernel.root_dir%/../web/uploads/programas
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        videos_image:
            uri_prefix:       '%path.imagenesVideos%'
            upload_destination: %kernel.root_dir%/../web/uploads/videos
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        horarios_image:
            uri_prefix:       '%path.imagenesHorarios%'
            upload_destination: %kernel.root_dir%/../web/uploads/horarios
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        horarios_radio_image:
            uri_prefix:       '%path.imagenesHorarios_radio%'
            upload_destination: %kernel.root_dir%/../web/uploads/radio/horarios
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        programas_radio_image:
            uri_prefix:       '%path.imagenesProgramas_radio%'
            upload_destination: %kernel.root_dir%/../web/uploads/radio/programas
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        audio_file:
            uri_prefix:       '%path.audiosNoticias%'
            upload_destination: %kernel.root_dir%/../web/uploads/audios
            namer:
                service: vich_uploader.namer_uniqid
                #options: { property: 'slug'} # supposing that the object contains a "slug" attribute or a "getSlug" method
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: BackendBundle\Entity\User
    group:
        group_class: BackendBundle\Entity\Group
    # service:                               # this lines
    #     mailer: fos_user.mailer.twig_swift # this lines
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

artgris_file_manager:
    web_dir: public                 # set your public Directory (not required, default value: web)
    conf:
        default:
            dir: "../web/Galerias"

vouched_for_audit_ui:
    user_class: BackendBundle\Entity\User

swiftmailer:
    transport: gmail
    username:  'ecomgrupo11@gmail.com'
    password:  'Ecomresistencia'

knp_paginator:
    page_range: 10                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:                                 
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query paameter name
    template:                                        
        pagination: "others/twitter_bootstrap_v4_pagination.html.twig"     # sliding pagination controls template                                    
        sortable: '@KnpPaginator/Pagination/sortable_link.html.twig' # sort link template                                
        filtration: '@KnpPaginator/Pagination/filtration.html.twig'  # filters template
ivory_ck_editor:
    configs:
        my_config:
            toolbar: full
            inline: true
            allowedContent: true
